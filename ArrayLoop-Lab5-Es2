# Direttive assembler per l'allocazione dei dati
# I vari elementi delle liste sono allocati in memoria in locazioni contigue. 
# Se l'indirizzo impiegato non rispetta l'allineamento relativo, si ottiene un'errore (eccezione causata da allineamento errato).

# http://www.dsi.unive.it/~arcb/LAB/C-data-struct/
.data
	myArray: .space 40 # 10 numeri
	indice: .word 2
	str: .asciiz "L'elemento all'ennesimo valore e' "
.text
	lw $t5, indice # indice in $t5
	
	# These numbers are in the processor (registers)
	addi $s0, $zero, 4
	addi $s1, $zero, 10
	addi $s2, $zero, 12
	# To store the numbers in memory RAM use store word
	# Index = $t0
	addi $t0, $zero, 0 # clearing $t0
	sw $s0, myArray($t0) # first position
	# update position
	addi $t0, $t0, 4
	sw $s1, myArray($t0) # storing at second position
	addi $t0, $t0, 4
	sw $s2, myArray($t0) # third location
	
	addi $t0, $zero, 0
	addi $t1, $zero, 0
	
	while:	
		beq $t5, $t1, exit
		addi $t1, $t1, 1
		addi $t0, $t0, 4
		j while
	exit:
		li $v0, 4
		la $a0, str
		syscall
		
		lw $t6, myArray($t0)
		li $v0, 1
		addi $a0, $t6, 0
		syscall
		
		li $v0, 10
		syscall
